@import "../../app/styles/global.scss";

.invoiceList {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 15px;
  // background-color: red;
  flex: 1;
  // margin-top: 20px;
}

.invoiceItem {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  align-items: center;
  padding: 15px;
  border-radius: 8px;
  cursor: pointer;
  transition: var(--transition);

  &.light-mode {
    background-color: get-color(white);
    border: 1px solid get-color(gray);
    color: get-color(dark-blue);
  }

  &.dark-mode {
    background-color: get-color(medium-blue);
    color: get-color(light-gray);
  }

  &:hover {
    border-color: get-color(primary-purple);
  }
}

.id {
  font-weight: 700;
}

.clientName {
  color: get-color(blue-gray);
}

.total {
  font-weight: 700;
}

.status {
  text-transform: capitalize;
  font-weight: 500;
  text-align: center;

  &.draft {
    color: get-color(draft);
    background-color: rgba(get-color(draft), 0.1);
  }

  &.pending {
    color: get-color(pending);
    background-color: rgba(get-color(pending), 0.1);
  }

  &.paid {
    color: get-color(paid); // Assuming you add a green color to $colors
    background-color: rgba(get-color(paid), 0.1);
  }
}

.paymentDue {
  color: get-color(blue-gray);
}

.noInvoices {
  text-align: center;
  color: get-color(gray);
  font-size: 16px;

  .nothingHere {
    font-size: 24px;
    font-weight: 700;
    color: get-color(dark-gray);
    font-family: var(--font-family);
  }

  .createInvoice {
    display: grid;
    color: var(--gray);
  }
}

// Responsive design
@include respond-to(mobile) {
  .invoiceItem {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto auto;
    gap: 10px;
    .id,
    .clientName,
    .total {
      grid-column: 1 / 2;
    }
    .status,
    .paymentDue {
      grid-column: 2 / 3;
      text-align: right;
    }
  }
}

@include respond-to(tablet) {
  .invoiceItem {
    grid-template-columns: 1fr 1fr 1fr 1fr;
    .id,
    .clientName {
      grid-column: 1 / 2;
    }
    .total {
      grid-column: 2 / 3;
    }
    .status {
      grid-column: 3 / 4;
    }
    .paymentDue {
      grid-column: 4 / 5;
    }
  }
}
